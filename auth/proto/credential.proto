syntax = "proto3";

service CredentialService {
  rpc Register(Credential) returns (Empty);
  rpc Login(Credential) returns (Token);
  rpc GetById(CredentialId) returns (CredentialResponse);
  rpc GetByEmail(CredentialEmail) returns (CredentialResponse);
  rpc GetActive(Token) returns (ActiveResponse);
  rpc UpdateEmail(EmailUpdate) returns (Empty);
  rpc UpdatePassword(PasswordUpdate) returns (Empty);
  rpc Deactivate(Token) returns (Empty);
  rpc Delete(CredentialId) returns (Empty);
  rpc ValidateToken(Token) returns (ValidateResponse);
  rpc RefreshToken(TokenRefresh) returns (Token);
  rpc CheckAuthority(Token) returns (ValidateResponse);
}

message Empty {
  optional string error_message = 1;
  optional int32 error_code = 2;
}


message ActiveResponse {
  string id = 1;
  string email = 2;
  optional string error_message = 3;
  optional int32 error_code = 4;
}

message ValidateResponse {
  bool validated = 1;
  string id = 2;
  optional string error_message = 3;
  optional int32 error_code = 4;
}

message Credential {
  string id = 1;
  string email = 2;
  string password = 3;
  optional string role = 4;
  optional bool active = 5;
}

message CheckedCredential {
  string email = 1;
  string password = 2;
  string password_check = 3;
}

message CredentialResponse {
  string id = 1;
  string email = 2;
  optional string role = 3;
  optional bool active = 4;
  optional string error_message = 5;
  optional int32 error_code = 6;
}

message EmailUpdate {
  string id = 1;
  string old_email = 2;
  string new_email = 3;
}

message PasswordUpdate {
  string id = 1;
  string old_password = 2;
  string new_password = 3;
}


message CredentialId {
  string id = 1;
}

message CredentialEmail {
  string email = 1;
}

message Token {
  string access_token = 1;
  optional string refresh_token = 2;
  optional string error_message = 3;
  optional int32 error_code = 4;
}

message TokenRefresh {
  optional string refresh_token = 1;
}