# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import credential_pb2 as credential__pb2


class CredentialServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
                '/CredentialService/Create',
                request_serializer=credential__pb2.CheckedCredential.SerializeToString,
                response_deserializer=credential__pb2.Empty.FromString,
                )
        self.GetById = channel.unary_unary(
                '/CredentialService/GetById',
                request_serializer=credential__pb2.CredentialId.SerializeToString,
                response_deserializer=credential__pb2.Credential.FromString,
                )
        self.GetByEmail = channel.unary_unary(
                '/CredentialService/GetByEmail',
                request_serializer=credential__pb2.CredentialEmail.SerializeToString,
                response_deserializer=credential__pb2.Credential.FromString,
                )
        self.Update = channel.unary_unary(
                '/CredentialService/Update',
                request_serializer=credential__pb2.Credential.SerializeToString,
                response_deserializer=credential__pb2.Empty.FromString,
                )
        self.UpdatePassword = channel.unary_unary(
                '/CredentialService/UpdatePassword',
                request_serializer=credential__pb2.CheckedCredential.SerializeToString,
                response_deserializer=credential__pb2.Empty.FromString,
                )
        self.UpdateEmail = channel.unary_unary(
                '/CredentialService/UpdateEmail',
                request_serializer=credential__pb2.CheckedCredential.SerializeToString,
                response_deserializer=credential__pb2.Empty.FromString,
                )
        self.Deactivate = channel.unary_unary(
                '/CredentialService/Deactivate',
                request_serializer=credential__pb2.CredentialEmail.SerializeToString,
                response_deserializer=credential__pb2.Empty.FromString,
                )


class CredentialServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetByEmail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateEmail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Deactivate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CredentialServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=credential__pb2.CheckedCredential.FromString,
                    response_serializer=credential__pb2.Empty.SerializeToString,
            ),
            'GetById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetById,
                    request_deserializer=credential__pb2.CredentialId.FromString,
                    response_serializer=credential__pb2.Credential.SerializeToString,
            ),
            'GetByEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.GetByEmail,
                    request_deserializer=credential__pb2.CredentialEmail.FromString,
                    response_serializer=credential__pb2.Credential.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=credential__pb2.Credential.FromString,
                    response_serializer=credential__pb2.Empty.SerializeToString,
            ),
            'UpdatePassword': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePassword,
                    request_deserializer=credential__pb2.CheckedCredential.FromString,
                    response_serializer=credential__pb2.Empty.SerializeToString,
            ),
            'UpdateEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateEmail,
                    request_deserializer=credential__pb2.CheckedCredential.FromString,
                    response_serializer=credential__pb2.Empty.SerializeToString,
            ),
            'Deactivate': grpc.unary_unary_rpc_method_handler(
                    servicer.Deactivate,
                    request_deserializer=credential__pb2.CredentialEmail.FromString,
                    response_serializer=credential__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'CredentialService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CredentialService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CredentialService/Create',
            credential__pb2.CheckedCredential.SerializeToString,
            credential__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CredentialService/GetById',
            credential__pb2.CredentialId.SerializeToString,
            credential__pb2.Credential.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetByEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CredentialService/GetByEmail',
            credential__pb2.CredentialEmail.SerializeToString,
            credential__pb2.Credential.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CredentialService/Update',
            credential__pb2.Credential.SerializeToString,
            credential__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CredentialService/UpdatePassword',
            credential__pb2.CheckedCredential.SerializeToString,
            credential__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CredentialService/UpdateEmail',
            credential__pb2.CheckedCredential.SerializeToString,
            credential__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Deactivate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CredentialService/Deactivate',
            credential__pb2.CredentialEmail.SerializeToString,
            credential__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
