syntax = "proto3";

service AvailabilityCrud {
  rpc GetAll (Empty) returns (AvailabilityDtos);
  rpc GetAllSearch(SearchDetails) returns (ExpandedAvailabilityDtos);
  rpc GetById (AvailabilityId) returns (AvailabilityDto);
  rpc Create (AvailabilityDto) returns (Result);
  rpc Delete (AvailabilityId) returns (Result);
  rpc Update (AvailabilityDto) returns (Result);
  rpc AddOccupiedInterval(UpdateIntervalDto) returns (Result);
  rpc RemoveOccupiedInterval(UpdateIntervalDto) returns (Result);
  rpc GetByAccommodationId(AvailabilityId) returns (AvailabilityDto);
  rpc GetPrice(PriceLookup) returns (Price);
}

message Empty {
}
message Result {
    string status = 1;
}
message SearchDetails {
    Interval interval = 1;
    int32 guests = 2;
    float price_min = 3;
    float price_max = 4;
}
message UpdateIntervalDto {
    string id = 1;
    Interval interval = 2;
}
message AvailabilityId {
  string id = 1;
}
message SpecialPricing {
    string title = 1;
    double pricing_markup = 2;
}
message Interval {
    string date_start = 1;
    string date_end = 2;
}
message AvailabilityDto {
    string availability_id = 1;
    string accommodation_id = 2;
    Interval interval = 3;
    string pricing_type = 4; 
    double base_price = 5;
    repeated SpecialPricing special_pricing = 6;
    repeated Interval occupied_intervals = 7;
}
message ExpandedAvailabilityDto {
    string availability_id = 1;
    string accommodation_id = 2;
    Interval interval = 3;
    string pricing_type = 4; 
    double base_price = 5;
    double total_price = 6;
    repeated SpecialPricing special_pricing = 7;
    repeated Interval occupied_intervals = 8;
}
message AvailabilityDtos {
    repeated AvailabilityDto items = 1;
}
message ExpandedAvailabilityDtos {
    repeated ExpandedAvailabilityDto items = 1;
}
message Price {
    double price = 1;
}
message PriceLookup {
    Interval interval = 1;
    int32 guests = 2;
    string accommodation_id = 3;
}
